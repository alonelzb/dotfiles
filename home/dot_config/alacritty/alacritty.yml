# Configuration for Alacritty, the GPU enhanced terminal emulator.
env:
  TERM: xterm-256color

import:
  # - C:\Users\zaibo\AppData\Roaming\alacritty\themes\kanagawa_wave.yaml
  # - C:\Users\zaibo\AppData\Roaming\alacritty\themes\gruvbox_material.yaml
  # - C:\Users\zaibo\AppData\Roaming\alacritty\themes\monokai_pro.yaml
  - C:\Users\zaibo\AppData\Roaming\alacritty\themes\dracula.yaml

window:
  opacity: 0.95
  dimensions:
    columns: 140
    lines: 38
  position:
    x: 10
    y: 10
  padding:
    x: 0
    y: 0
  #none, full
  # Available values:
  # - full: borders and title bar
  # - none: neither borders nor title bar
  # decorations: buttonless
  decorations: full

  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  startup_mode: Windowed
  dynamic_title: true

#
scrolling:
  # 回滚缓冲区中的最大行数。 设置为 0 会禁用滚动
  # disable scrolling.
  history: 1000

  # 一次滚动几行
  multiplier: 3
# Window title
#title: Alacritty


# Font configuration
font:
  normal:
    family: SauceCodePro Nerd Font Propo
    # family: FiraMono Nerd Font Mono
    # family: Hasklug Nerd Font Mono
    style: Regular

  bold:
    family: Hasklug Nerd Font Mono
    # family: FiraMono Nerd Font Mono
    style: Bold

  italic:
    family: Hasklug Nerd Font Mono
    style: Italic

  bold_italic:
    family: Hasklug Nerd Font Mono
    style: Bold Italic

  size: 16
  # 行间距
  offset:
    x: 0
    y: 1

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

selection:
# 选中文本后是否复制到主剪贴板
  save_to_clipboard: true
#

#cursor:
# Cursor style
#style:
# Cursor shape
#
# Values for `shape`:
#   - ▇ Block
#   - _ Underline
#   - | Beam
#shape: Block

# Cursor blinking state
#
# Values for `blinking`:
#   - Never: Prevent the cursor from ever blinking
#   - Off: Disable blinking by default
#   - On: Enable blinking by default
#   - Always: Force the cursor to always blink
#blinking: Off

# 配置热更新
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g.
# `/bin/fish`. Entries in `shell.args` are passed unmodified as arguments to the
# shell.
#
# Default:
#   - (Linux/BSD/macOS) `$SHELL` or the user's login shell, if `$SHELL` is unset
#   - (Windows) powershell
shell:
  program: D:\Applications\Scoop\apps\nu\current\nu.exe
  args:
    - -n

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

#mouse:
# Click settings
#
# The `double_click` and `triple_click` settings control the time
# alacritty should wait for accepting multiple clicks as one double
# or triple click.
#double_click: { threshold: 300 }
#triple_click: { threshold: 300 }

# If this is `true`, the cursor is temporarily hidden when typing.
#hide_when_typing: false

# Hints
#
# Terminal hints can be used to find text or hyperlink in the visible part of
# the terminal and pipe it to other applications.
#hints:
# Keys used for the hint labels.
#alphabet: "jfkdls;ahgurieowpq"

# List with all available hints
#
# Each hint must have any of `regex` or `hyperlinks` field and either an
# `action` or a `command` field. The fields `mouse`, `binding` and
# `post_processing` are optional.
#
# The `hyperlinks` option will cause OSC 8 escape sequence hyperlinks to be
# highlighted.
#
# The fields `command`, `binding.key`, `binding.mods`, `binding.mode` and
# `mouse.mods` accept the same values as they do in the `key_bindings` section.
#
# The `mouse.enabled` field controls if the hint should be underlined while
# the mouse with all `mouse.mods` keys held or the vi mode cursor is above it.
#
# If the `post_processing` field is set to `true`, heuristics will be used to
# shorten the match if there are characters likely not to be part of the hint
# (e.g. a trailing `.`). This is most useful for URIs and applies only to
# `regex` matches.
#
# Values for `action`:
#   - Copy
#       Copy the hint's text to the clipboard.
#   - Paste
#       Paste the hint's text to the terminal or search.
#   - Select
#       Select the hint's text.
#   - MoveViModeCursor
#       Move the vi mode cursor to the beginning of the hint.
#enabled:
# - regex: "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
#           [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"
#   hyperlinks: true
#   command: xdg-open
#   post_processing: true
#   mouse:
#     enabled: true
#     mods: None
#   binding:
#     key: U
#     mods: Control|Shift

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty
# captures the mouse, the `Shift` modifier is automatically added as a
# requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings for actions not exclusive to mouse mode)
#
# - Mouse exclusive actions:
#
#   - ExpandSelection
#       Expand the selection to the current mouse cursor location.
#
# And optionally:
#
# - `mods` (see key bindings)
mouse_bindings:
  - { mouse: Right, action: Paste }
  - { mouse: Left, action: Copy }
  - { mouse: Right,  mods: Control, action: ExpandSelection }
#  - { mouse: Middle, mode: ~Vi,     action: PasteSelection  }

key_bindings:
  - { key: Return, mods: Control|Shift, action: SpawnNewInstance }
  - { key: V, mods: Control, action: Paste }
  #- { key: C,              mods: Control|Shift,                   action: Copy             }
  #- { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
  #- { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
  #- { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
  #- { key: Insert,         mods: Shift,                           action: PasteSelection   }
  #- { key: Key0,           mods: Control,                         action: ResetFontSize    }
  #- { key: Equals,         mods: Control,                         action: IncreaseFontSize }
  #- { key: Plus,           mods: Control,                         action: IncreaseFontSize }
  #- { key: NumpadAdd,      mods: Control,                         action: IncreaseFontSize }
  #- { key: Minus,          mods: Control,                         action: DecreaseFontSize }
  #- { key: NumpadSubtract, mods: Control,                         action: DecreaseFontSize }
  - { key: PageUp,                        action: ScrollPageUp }
  - { key: PageDown,                      action: ScrollPageDown }
  # - { key: PageDown, mods: Control,       chars: "\x1b[6;5~"                   }

  # (Windows only)
  - { key: Return, mods: Shift, action: ToggleFullscreen }
